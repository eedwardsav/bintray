# Generated by stubbs:add-option. Do not edit, if using stubbs.
# Created: Fri May 15 23:11:11 UTC 2015
#
#/ usage: bintray:package-upload-deb  --apikey <>  --file <>  --org <>  --repo <>  --version <>  --user <>  --package <> [ --descriptor <descriptor.json>]  --deb_distribution <precise,trusty,sqeeze,wheezy>  --deb_component <main>  --deb_architecture <amd64> 

# _rerun_options_parse_ - Parse the command arguments and set option variables.
#
#     rerun_options_parse "$@"
#
# Arguments:
#
# * the command options and their arguments
#
# Notes:
# 
# * Sets shell variables for any parsed options.
# * The "-?" help argument prints command usage and will exit 2.
# * Return 0 for successful option parse.
#
rerun_options_parse() {

    while [ "$#" -gt 0 ]; do
        OPT="$1"
        case "$OPT" in
            --apikey) rerun_option_check $# $1; APIKEY=$2 ; shift ;;
            --file) rerun_option_check $# $1; FILE=$2 ; shift ;;
            --org) rerun_option_check $# $1; ORG=$2 ; shift ;;
            --repo) rerun_option_check $# $1; REPO=$2 ; shift ;;
            --version) rerun_option_check $# $1; VERSION=$2 ; shift ;;
            --user) rerun_option_check $# $1; USER=$2 ; shift ;;
            --package) rerun_option_check $# $1; PACKAGE=$2 ; shift ;;
            --descriptor) rerun_option_check $# $1; DESCRIPTOR=$2 ; shift ;;
            --deb_distribution) rerun_option_check $# $1; DEB_DISTRIBUTION=$2 ; shift ;;
            --deb_component) rerun_option_check $# $1; DEB_COMPONENT=$2 ; shift ;;
            --deb_architecture) rerun_option_check $# $1; DEB_ARCHITECTURE=$2 ; shift ;;
            # help option
            -|--*?)
                rerun_option_usage
                exit 2
                ;;
            # end of options, just arguments left
            *)
              break
        esac
        shift
    done

    # Set defaultable options.
    [ -z "$DESCRIPTOR" ] && DESCRIPTOR="$(rerun_property_get $RERUN_MODULE_DIR/options/descriptor DEFAULT)"
    [ -z "$DEB_DISTRIBUTION" ] && DEB_DISTRIBUTION="$(rerun_property_get $RERUN_MODULE_DIR/options/deb_distribution DEFAULT)"
    [ -z "$DEB_COMPONENT" ] && DEB_COMPONENT="$(rerun_property_get $RERUN_MODULE_DIR/options/deb_component DEFAULT)"
    [ -z "$DEB_ARCHITECTURE" ] && DEB_ARCHITECTURE="$(rerun_property_get $RERUN_MODULE_DIR/options/deb_architecture DEFAULT)"
    # Check required options are set
    [ -z "$APIKEY" ] && { echo >&2 "missing required option: --apikey" ; return 2 ; }
    [ -z "$FILE" ] && { echo >&2 "missing required option: --file" ; return 2 ; }
    [ -z "$ORG" ] && { echo >&2 "missing required option: --org" ; return 2 ; }
    [ -z "$REPO" ] && { echo >&2 "missing required option: --repo" ; return 2 ; }
    [ -z "$VERSION" ] && { echo >&2 "missing required option: --version" ; return 2 ; }
    [ -z "$USER" ] && { echo >&2 "missing required option: --user" ; return 2 ; }
    [ -z "$PACKAGE" ] && { echo >&2 "missing required option: --package" ; return 2 ; }
    [ -z "$DEB_DISTRIBUTION" ] && { echo >&2 "missing required option: --deb_distribution" ; return 2 ; }
    [ -z "$DEB_COMPONENT" ] && { echo >&2 "missing required option: --deb_component" ; return 2 ; }
    [ -z "$DEB_ARCHITECTURE" ] && { echo >&2 "missing required option: --deb_architecture" ; return 2 ; }
    # If option variables are declared exportable, export them.

    #
    return 0
}


# If not already set, initialize the options variables to null.
: ${APIKEY:=}
: ${FILE:=}
: ${ORG:=}
: ${REPO:=}
: ${VERSION:=}
: ${USER:=}
: ${PACKAGE:=}
: ${DESCRIPTOR:=}
: ${DEB_DISTRIBUTION:=}
: ${DEB_COMPONENT:=}
: ${DEB_ARCHITECTURE:=}


